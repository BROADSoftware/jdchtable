/*
 * Copyright (C) 2016 BROADSoftware
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



plugins {
  id 'nebula.ospackage' version '3.4.0'
}

defaultTasks 'rpm'


apply plugin: 'java'
apply plugin: 'eclipse'

repositories {
    jcenter()
}

defaultTasks 'all'

// Refer to https://issues.gradle.org/browse/GRADLE-1010
eclipseJdt << {
	File f = file('.settings/org.eclipse.core.resources.prefs')
   	f.write('eclipse.preferences.version=1\n')
   	f.append('encoding/<project>=UTF-8')
}
	

configurations {
	compileAndJar
	compile.extendsFrom(compileAndJar)
}

// # NB: Hadoop is pulled by hbase, but we ensure version is the targeted one
dependencies {
	compile "org.slf4j:slf4j-api:$sl4jApiVersion"
	compile "org.slf4j:slf4j-log4j12:$sl4jLog4jVersion"
	compile "log4j:log4j:$log4jVersion"
 	compileAndJar "net.sf.jopt-simple:jopt-simple:$joptVersion"
    compileAndJar "com.esotericsoftware.yamlbeans:yamlbeans:$yamlbeansVersion"
    compile "org.apache.hbase:hbase-client:$hbaseVersion"
    compile "org.apache.hadoop:hadoop-mapreduce-client-core:$hadoopVersion"		
    compile "org.apache.hadoop:hadoop-common:$hadoopVersion"		
    compile "org.apache.hadoop:hadoop-auth:$hadoopVersion"		
    testCompile 'junit:junit:4.12'
}


jar {
	exclude("log4j.xml")
	rename("log4j-jar.xml", "log4j.xml")
}

//create a single Jar with all dependencies
task uberJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'jdchtable', 
        	'Implementation-Version': version,
        	'Main-Class': 'com.kappaware.jdchtable.Main'
    }
    baseName = project.name + "_uber"
    from { configurations.compileAndJar.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


task rpm(type: Rpm) {
	summary 'HBase table creation tool'
	packageName rpmBaseName
	version versionForRpm
	arch NOARCH
	vendor 'BROADSoftware'
	license 'Apache 2.0'
	os LINUX
	release '1'
	packageDescription 'jdchbase is an HBase admin tool allowing idempotency on table definition.'
    
   	from(uberJar.outputs.files) {
	    into '/opt/jdchtable'
	    user 'root'
		group 'root'
	    fileMode 0644
    }
    
   	from('scripts/packages/jdchtable') { into '/usr/bin'; user 'root'; group 'root'; fileMode 0755  }
   	from('scripts/packages/log4j.xml') { into '/etc/jdchtable'; user 'root'; group 'root'; fileMode 0644  }
   	from('scripts/packages/setenv.sh') { into '/etc/jdchtable'; user 'root'; group 'root'; fileMode 0644    }
    
}




